{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/kcmvillarino/Desktop/nextjs-app/pages/post/[id].js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport Link from \"next/link\";\nimport Posts from \"../data/posts.json\";\nimport Layout from \"../../components/layout\";\nimport { Container, Row, Col, Alert } from \"react-bootstrap\";\n\nvar PostID = function PostID() {\n  var _useRouter = useRouter(),\n      query = _useRouter.query;\n\n  var PostItem = [];\n\n  if (query.id) {\n    for (var i = 0; i < Posts.length; i += 1) {\n      if (Posts[i].id === parseInt(query.id)) {\n        PostItem.push(Posts[i]);\n      }\n    }\n  }\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, \" \", PostItem.map(function (item, key) {\n    return __jsx(React.Fragment, null, __jsx(Alert, {\n      key: \"\".concat(item.id, \"-\").concat(new Date().getSeconds()),\n      variant: \"primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 19\n      }\n    }, \"ID: \", item.id), __jsx(Alert, {\n      key: \"\".concat(item.id, \"-\").concat(new Date().getSeconds()),\n      variant: \"secondary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 19\n      }\n    }, \"Title: \", item.title));\n  })))));\n};\n\nexport default PostID;","map":{"version":3,"sources":["/Users/kcmvillarino/Desktop/nextjs-app/pages/post/[id].js"],"names":["useRouter","Link","Posts","Layout","Container","Row","Col","Alert","PostID","query","PostItem","id","i","length","parseInt","push","map","item","key","Date","getSeconds","title"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,KAA9B,QAA2C,iBAA3C;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA,mBACDR,SAAS,EADR;AAAA,MACXS,KADW,cACXA,KADW;;AAEnB,MAAIC,QAAQ,GAAG,EAAf;;AACA,MAAID,KAAK,CAACE,EAAV,EAAc;AACZ,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,KAAK,CAACW,MAA1B,EAAkCD,CAAC,IAAI,CAAvC,EAA0C;AACxC,UAAIV,KAAK,CAACU,CAAD,CAAL,CAASD,EAAT,KAAgBG,QAAQ,CAACL,KAAK,CAACE,EAAP,CAA5B,EAAwC;AACtCD,QAAAA,QAAQ,CAACK,IAAT,CAAcb,KAAK,CAACU,CAAD,CAAnB;AACD;AACF;AACF;;AAED,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,EAEGF,QAAQ,CAACM,GAAT,CAAa,UAACC,IAAD,EAAOC,GAAP,EAAe;AAC3B,WACE,4BACE,MAAC,KAAD;AACE,MAAA,GAAG,YAAKD,IAAI,CAACN,EAAV,cAAgB,IAAIQ,IAAJ,GAAWC,UAAX,EAAhB,CADL;AAEE,MAAA,OAAO,EAAE,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAIOH,IAAI,CAACN,EAJZ,CADF,EAOE,MAAC,KAAD;AACE,MAAA,GAAG,YAAKM,IAAI,CAACN,EAAV,cAAgB,IAAIQ,IAAJ,GAAWC,UAAX,EAAhB,CADL;AAEE,MAAA,OAAO,EAAE,WAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIUH,IAAI,CAACI,KAJf,CAPF,CADF;AAgBD,GAjBA,CAFH,CADF,CADF,CADF,CADF;AA6BD,CAxCD;;AA0CA,eAAeb,MAAf","sourcesContent":["import { useRouter } from \"next/router\"\nimport Link from \"next/link\"\nimport Posts from \"../data/posts.json\"\nimport Layout from \"../../components/layout\"\nimport { Container, Row, Col, Alert } from \"react-bootstrap\"\n\nconst PostID = () => {\n  const { query } = useRouter()\n  let PostItem = []\n  if (query.id) {\n    for (let i = 0; i < Posts.length; i += 1) {\n      if (Posts[i].id === parseInt(query.id)) {\n        PostItem.push(Posts[i])\n      }\n    }\n  }\n\n  return (\n    <Layout>\n      <Container>\n        <Row>\n          <Col>\n            {\" \"}\n            {PostItem.map((item, key) => {\n              return (\n                <>\n                  <Alert\n                    key={`${item.id}-${new Date().getSeconds()}`}\n                    variant={\"primary\"}\n                  >\n                    ID: {item.id}\n                  </Alert>\n                  <Alert\n                    key={`${item.id}-${new Date().getSeconds()}`}\n                    variant={\"secondary\"}\n                  >\n                    Title: {item.title}\n                  </Alert>\n                </>\n              )\n            })}\n          </Col>\n        </Row>\n      </Container>\n    </Layout>\n  )\n}\n\nexport default PostID\n"]},"metadata":{},"sourceType":"module"}